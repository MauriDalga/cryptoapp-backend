using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Context.Migrations
{
    public partial class CoinAccountTable : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Coins",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    LongName = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ShortName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Icon = table.Column<string>(type: "nvarchar(max)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Coins", x => x.Id);
                    table.UniqueConstraint("AK_Coins_LongName", x => x.LongName);
                });

            migrationBuilder.CreateTable(
                name: "CoinAccounts",
                columns: table => new
                {
                    CoinId = table.Column<int>(type: "int", nullable: false),
                    UserId = table.Column<int>(type: "int", nullable: false),
                    Balance = table.Column<decimal>(type: "decimal(30,16)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CoinAccounts", x => new { x.CoinId, x.UserId });
                    table.ForeignKey(
                        name: "FK_CoinAccounts_Coins_CoinId",
                        column: x => x.CoinId,
                        principalTable: "Coins",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_CoinAccounts_Users_UserId",
                        column: x => x.UserId,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "Coins",
                columns: new[] { "Id", "Icon", "LongName", "ShortName" },
                values: new object[] { 1, "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", "Bitcoin", "BTC" });

            migrationBuilder.InsertData(
                table: "Coins",
                columns: new[] { "Id", "Icon", "LongName", "ShortName" },
                values: new object[] { 2, "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", "Ethereum", "ETH" });

            migrationBuilder.InsertData(
                table: "Coins",
                columns: new[] { "Id", "Icon", "LongName", "ShortName" },
                values: new object[] { 3, "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", "Solana", "SOL" });

            migrationBuilder.InsertData(
                table: "CoinAccounts",
                columns: new[] { "CoinId", "UserId", "Balance" },
                values: new object[,]
                {
                    { 1, 1, 10m },
                    { 1, 2, 10m },
                    { 1, 3, 10m },
                    { 2, 1, 10m },
                    { 2, 2, 10m },
                    { 2, 3, 10m },
                    { 3, 1, 10m },
                    { 3, 2, 10m },
                    { 3, 3, 10m }
                });

            migrationBuilder.CreateIndex(
                name: "IX_CoinAccounts_UserId",
                table: "CoinAccounts",
                column: "UserId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "CoinAccounts");

            migrationBuilder.DropTable(
                name: "Coins");
        }
    }
}
